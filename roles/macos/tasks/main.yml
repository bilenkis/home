- name: install DNU utils
  homebrew:
    name: "{{ item.name }}"
    state: present
    install_options: "{{ item.opts }}"
  become: no
  with_items:
    - name: python3
    - name: coreutils
    - name: binutils
    - name: diffutils
    - name: gawk
    - name: gnutls
    - name: gzip
    - name: screen
    - name: watch
    - name: wget
    - name: wdiff
      opts: 'with-gettext'
    - name: ed
      opts: 'with-default-names'
    - name: findutils
      opts: 'with-default-names'
    - name: gnu-indent
      opts: 'with-default-names'
    - name: gnu-sed
      opts: 'with-default-names'
    - name: gnu-tar
      opts: 'with-default-names'
    - name: gnu-which
      opts: 'with-default-names'
    - name: grep
      opts: 'with-default-names'
    - name: file-formula
    - name: git
    - name: openssh
    - name: perl
    - name: python
    - name: rsync
    - name: unzip
    - name: vim
      opts: 'override-system-vi'
    - name: macvim
      opts: 'override-system-vim,custom-system-icons'
    - name: zsh

#- name: install DNU utils
#  homebrew:
#    name: "{{ item }}"
#    state: present
#  become: no
#  with_items:
#    - python3
#    - coreutils
#    - binutils
#    - diffutils
#    - gawk
#    - gnutls
#    - gzip
#    - screen
#    - watch
#    - wget

#- homebrew:
#    name: "{{ item.name }}"
#    state: present
#    install_options: "{{ item.opts }}"
#  become: no
#  with_items:
#    - { name: 'wdiff', opts: 'with-gettext' }
#    - { name: 'ed', opts: 'with-default-names' }
#    - { name: 'findutils', opts: 'with-default-names' }
#    - { name: 'gnu-indent', opts: 'with-default-names' }
#    - { name: 'gnu-sed', opts: 'with-default-names' }
#    - { name: 'gnu-tar', opts: 'with-default-names' }
#    - { name: 'gnu-which', opts: 'with-default-names' }
#    - { name: 'grep', opts: 'with-default-names' }

- name: install python libs
  pip:
    name: "{{ item }}"
  with_items:
    - virtualenv
    - docker-compose

- name: install grml zsh
  get_url:
    url: https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.zshrc"
    owner: "{{ ansible_env.SUDO_USER }}"
- name: configuring grml
  lineinfile:
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.zshrc"
    line: "{{ item.to }}"
    regexp: "{{ item.from }}"
    backrefs: yes
  with_items:
    - from: '(\s+)format \"\$\{MAGENTA\}.*'
      to: '\1format "${MAGENTA}(${NO_COLOR}%s${MAGENTA})${YELLOW}-${MAGENTA}[${GREEN}%b${MAGENTA}${MAGENTA}]${RED}%c${GREEN}%u${NO_COLOR} "'
    - from: "^(bind2maps.*insert-datestamp)"
      to: '#\1'


- name: synchronize configs
  synchronize:
    src: Users/
    dest: "/Users/{{ ansible_env.SUDO_USER }}/"
    archive: yes

- name: templating .gitconfig
  template:
    src: Users/.gitconfig
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.gitconfig"

- name: init vim plugins
  shell: >
    vim +PlugInstall +qall

- name: set right file owner
  file:
    path: "/Users/{{ ansible_env.SUDO_USER }}"
    state: directory
    recurse: yes
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "staff"

# vi:syntax=yaml
