---

- name: installing packages
  apt: name={{ item }} state=present update_cache=yes
  with_items:
    - vim
    - zsh
    - roxterm
    - mosh
    - sshfs
    - unzip
    - apt-transport-https
    - software-properties-common
    - xinit
    - consolekit
    - openbox
    - tint2
    - firefox
    - gmrun
    - geeqie
    - numlockx
    - kbdd
    - xscreensaver
    - keepassx
    - htop
    - ncmpcpp
    - alsa-base
    - alsa-utils
  become: yes

- name: install docker
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present
- apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable'
    state: present
    filename: docker
- apt: name=docker-ce state=present update_cache=yes
- user:
    name: "{{ ansible_env.SUDO_USER }}"
    groups: docker
    append: yes

- name: install python libs
  pip:
    name: "{{ item }}"
  with_items:
    - virtualenv
    - docker-compose

- name: install grml zsh
  get_url:
    url: https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc
    dest: "/home/{{ ansible_env.SUDO_USER }}/.zshrc"
    owner: "{{ ansible_env.SUDO_USER }}"
    force: yes
- name: configuring grml
  lineinfile:
    dest: "/home/{{ ansible_env.SUDO_USER }}/.zshrc"
    line: '\1format "${MAGENTA}(${NO_COLOR}%s${MAGENTA})${YELLOW}-${MAGENTA}[${GREEN}%b${MAGENTA}${MAGENTA}]${RED}%c${GREEN}%u${NO_COLOR} "'
    regexp: '(\s+)format \"\$\{MAGENTA\}.*'
    backrefs: yes


- name: configuring openvpn
  file:
    path: "/home/{{ ansible_env.SUDO_USER }}/.ovpn"
    state: directory
    owner: "{{ ansible_env.SUDO_USER }}"
- stat:
    path: "/home/{{ ansible_env.SUDO_USER }}/.ovpn/update-resolv-conf"
  register: f
- copy:
    src: '/etc/openvpn/update-resolv-conf'
    dest: "/home/{{ ansible_env.SUDO_USER }}/.ovpn/update-resolv-conf"
    owner: "{{ ansible_env.SUDO_USER }}"
    mode: u=rwx,g=,o=
  when: not f.stat.exists
- command: "which openvpn"
  register: openvpn_path
- template:
    src: etc/sudoers.d/openvpn.conf
    dest: "/etc/sudoers.d/openvpn.conf"


- name: synchronize configs
  synchronize:
    src: home/
    dest: "/home/{{ ansible_env.SUDO_USER }}/"
    archive: yes

- name: templating autostart
  template:
    src: home/.config/openbox/autostart.j2
    dest: "/home/{{ ansible_env.SUDO_USER }}/.config/openbox/autostart"

- name: templating tmux
  template:
    src: home/.tmux.conf.j2
    dest: "/home/{{ ansible_env.SUDO_USER }}/.tmux.conf"

- name: init vim plugins
  shell: >
    vim +PlugInstall +qall

# vi:syntax=yaml
