- name: install GNU utils
  homebrew:
    name: "{{ item.name }}"
    state: present
    install_options: "{{ item.opts }}"
  become: no
  with_items:
    - { name: 'bash', opts: '' }
    - { name: 'python3', opts: '' }
    - { name: 'coreutils', opts: '' }
    - { name: 'binutils', opts: '' }
    - { name: 'diffutils', opts: '' }
    - { name: 'gawk', opts: '' }
    - { name: 'gnutls', opts: '' }
    - { name: 'gzip', opts: '' }
    - { name: 'screen', opts: '' }
    - { name: 'watch', opts: '' }
    - { name: 'wget', opts: '' }
    - { name: 'wdiff', opts: 'with-gettext' }
    - { name: 'ed', opts: 'with-default-names' }
    - { name: 'findutils', opts: 'with-default-names' }
    - { name: 'gnu-indent', opts: 'with-default-names' }
    - { name: 'gnu-sed', opts: 'with-default-names' }
    - { name: 'gnu-tar', opts: 'with-default-names' }
    - { name: 'gnu-which', opts: 'with-default-names' }
    - { name: 'grep', opts: 'with-default-names' }
    - { name: 'file-formula', opts: '' }
    - { name: 'git', opts: '' }
    - { name: 'openssh', opts: '' }
    - { name: 'perl', opts: '' }
    - { name: 'python', opts: '' }
    - { name: 'rsync', opts: '' }
    - { name: 'unzip', opts: '' }
    - { name: 'vim', opts: 'override-system-vi' }
    - { name: 'zsh', opts: '' }
    - { name: 'sshuttle', opts: '' }
    - { name: 'nmap', opts: '' }
    - { name: 'mpd', opts: '' }
    - { name: 'ripgrep', opts: '' }
    - { name: 'tmux', opts: '' }
    - { name: 'p7zip', opts: '' }
    - { name: 'htop', opts: '' }
    - { name: 'awscli', opts: '' }
    - { name: 'mosh', opts: '' }

# install awless
- name: install awless
  shell: >
    brew tap wallix/awless; brew install awless
  become: no

- name: configure screenshots dir
  file:
    path: "/Users/{{ ansible_env.SUDO_USER }}/Screenshots"
    state: directory
- shell: >
    defaults write com.apple.screencapture location ~/Screenshots
  become: no

- name: unlink gnu-ls without color
  file:
    path: '/usr/local/opt/coreutils/libexec/gnubin/ls'
    state: absent

- name: install python libs
  pip:
    name: "{{ item }}"
  with_items:
    - virtualenv
    - docker-compose

- name: install grml zsh
  get_url:
    url: https://git.grml.org/f/grml-etc-core/etc/zsh/zshrc
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.zshrc"
    owner: "{{ ansible_env.SUDO_USER }}"
- name: configuring grml
  lineinfile:
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.zshrc"
    line: "{{ item.to }}"
    regexp: "{{ item.from }}"
    backrefs: yes
  with_items:
    - from: '(\s+)format \"\$\{MAGENTA\}.*'
      to: '\1format "${MAGENTA}(${NO_COLOR}%s${MAGENTA})${YELLOW}-${MAGENTA}[${GREEN}%b${MAGENTA}${MAGENTA}]${RED}%c${GREEN}%u${NO_COLOR} "'
    - from: "^(bind2maps.*insert-datestamp)"
      to: '#\1'
- name: add zsh to official shell
  lineinfile:
    path: "/etc/shells"
    line: "/usr/local/bin/zsh"
- name: change users shell
  user:
    name: "{{ ansible_env.SUDO_USER }}"
    shell: "/usr/local/bin/zsh"


- name: synchronize configs
  synchronize:
    src: Users/
    dest: "/Users/{{ ansible_env.SUDO_USER }}/"
    archive: yes

- name: templating .gitconfig
  template:
    src: Users/.gitconfig
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.gitconfig"

- name: creating mpd config dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "staff"
  with_items:
    - "/Users/{{ ansible_env.SUDO_USER }}/.config/mpd"
    - "/usr/local/etc/mpd"
- name: templating mpd
  template:
    src: Users/.config/mpd/mpd.conf
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.config/mpd/mpd.conf"
- name: creating symlink to mpd config
  file:
    dest: /usr/local/etc/mpd/mpd.conf
    src: "/Users/{{ ansible_env.SUDO_USER }}/.config/mpd/mpd.conf"
    state: link
    force: yes

- name: init vim plugins
  shell: >
    vim +PlugInstall +qall

- name: configure ssh client
  lineinfile:
    dest: "/Users/{{ ansible_env.SUDO_USER }}/.ssh/config"
    line: "{{ item }}"
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "staff"
    create: yes
  with_items:
    - Host *
    - ForwardAgent yes
    - StrictHostKeyChecking no
    - ControlMaster auto
    - ControlPath /tmp/%r@%h:%p
    - ControlPersist 10m
    - Include ~/.ssh/config.d/*

- name: set right file owner
  file:
    path: "/Users/{{ ansible_env.SUDO_USER }}"
    state: directory
    recurse: yes
    owner: "{{ ansible_env.SUDO_USER }}"
    group: "staff"

# vi:syntax=yaml
